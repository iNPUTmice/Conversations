apply plugin: 'com.android.application'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.2'
    }
}

dependencies {
    compile 'com.android.support:support-v13:19.1.0'
    compile project(':libs:minidns')
    compile project(':libs:MemorizingTrustManager')
    compile project(':libs:openpgp-api-lib')
    compile project(':libs:otr4j')
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.1"

    defaultConfig {
        applicationId "eu.siacs.conversations"
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 32
        versionName "0.8"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    project(':') {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint"
        }
    }

    /*
     * To sign release build, create file gradle.properties in USER_HOME/.gradle
     * or in your project directory with this content:
     *
     * mStoreFile=/path/to/key.store
     * mStorePassword=xxx
     * mKeyAlias=alias
     * mKeyPassword=xxx
     */
    if (project.hasProperty('mStoreFile') &&
            project.hasProperty('mStorePassword') &&
            project.hasProperty('mKeyAlias') &&
            project.hasProperty('mKeyPassword')) {

        signingConfigs {
            release {
                storeFile file(mStoreFile)
                storePassword mStorePassword
                keyAlias mKeyAlias
                keyPassword mKeyPassword
            }
        }

        buildTypes.release.signingConfig = signingConfigs.release
    } else {
        buildTypes.release.signingConfig = null
    }

    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        applicationVariants.all { variant ->
            def fileName = variant.packageApplication.outputFile.name.replace(".apk", "-" + defaultConfig.versionName + ".apk")
            variant.packageApplication.outputFile = new File(variant.packageApplication.outputFile.parent, fileName)
            if (variant.zipAlign) {
                if (variant.name.equals('release')) {
                   variant.outputFile = new File(variant.outputFile.parent, rootProject.name + "-" + defaultConfig.versionName + ".apk")
                }
                if (variant.name.equals('debug')) {
                    fileName = variant.outputFile.name.replace(".apk", "-" + defaultConfig.versionName + ".apk")
                    variant.outputFile = new File(variant.outputFile.parent, fileName)
               }
           }
        }
    }

    lintOptions {
        abortOnError false
        checkAllWarnings true
    }

    //This disables Lint! Set to true to enable it.
    tasks.whenTaskAdded { task ->
        if (task.name.contains('lint')) {
            task.enabled = false
        }
    }
}
